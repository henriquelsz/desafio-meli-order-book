version: '3.8'

networks:
  my_network:
    driver: bridge

services:
  redis:
    image: redis:latest
    container_name: redis
    restart: always
    ports:
      - "6379:6379"
    networks:
      - my_network

  rabbitmq:
    image: "rabbitmq:3-management"
    container_name: "rabbitmq"
    hostname: "rabbitmq"
    ports:
      - "5672:5672"
      - "15672:15672"
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 10s
      retries: 10
      timeout: 5s
      start_period: 10s
    networks:
      - my_network

  api:
    build:
      context: .
      dockerfile: Dockerfile.api
    container_name: api
    ports:
      - "8000:8000"
    environment:
      - RABBITMQ_HOST=rabbitmq
    depends_on:
      rabbitmq:
        condition: service_healthy
      redis:
        condition: service_started
    networks:
      - my_network

  order_service:
    build:
      context: .
      dockerfile: Dockerfile.order
    container_name: order_service
    ports:
      - "5002:5002"
    environment:
      - RABBITMQ_HOST=rabbitmq
    depends_on:
      rabbitmq:
        condition: service_healthy
      redis:
        condition: service_started
    networks:
      - my_network

  wallet_service:
    build:
      context: .
      dockerfile: Dockerfile.wallet
    container_name: wallet_service
    ports:
      - "5001:5001"
    environment:
      - RABBITMQ_HOST=rabbitmq
    depends_on:
      rabbitmq:
        condition: service_healthy
      redis:
        condition: service_started
    networks:
      - my_network

  matching_engine:
    build:
      context: .
      dockerfile: Dockerfile.matching
    container_name: matching_engine
    ports:
      - "5003:5003"
    environment:
      - RABBITMQ_HOST=rabbitmq
    depends_on:
      rabbitmq:
        condition: service_healthy
    networks:
      - my_network

  eventstore:
    image: eventstore/eventstore:latest
    container_name: eventstore
    environment:
      - EVENTSTORE_RUN_PROJECTIONS=All
      - EVENTSTORE_START_STANDARD_PROJECTIONS=true
      - EVENTSTORE_INSECURE=true
      - EVENTSTORE_ENABLE_ATOM_PUB_OVER_HTTP=true
    ports:
      - "2113:2113"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:2113/health/live"]
      interval: 10s
      retries: 10
      timeout: 5s
      start_period: 10s
    networks:
      - my_network

  event_store:
    build:
      context: .
      dockerfile: Dockerfile.event_store
    ports:
      - "5004:5004"
    depends_on:
      eventstore:
        condition: service_healthy
    networks:
      - my_network

